syntax = "proto3";

package lnrpc;

service Lightning {
    rpc GetInfo (GetInfoRequest) returns (GetInfoResponse);
    rpc AddInvoice (Invoice) returns (AddInvoiceResponse);
    rpc SubscribeInvoices (InvoiceSubscription) returns (stream Invoice);
}

message GetInfoRequest {}

message GetInfoResponse {
    string version = 1;
    string identity_pubkey = 2;
    string alias = 3;
    uint32 num_active_channels = 4;
    uint32 num_peers = 5;
    uint32 block_height = 6;
    string network = 7;
}

message Invoice {
    string memo = 1;
    bytes r_preimage = 2;
    bytes r_hash = 3;
    string value = 4;
    bool settled = 5;
    int64 creation_date = 6;
    int64 settle_date = 7;
    string payment_request = 8;
    string description_hash = 9;
    int64 expiry = 10;
    string fallback_addr = 11;
    int64 cltv_expiry = 12;
    repeated RouteHint route_hints = 13;
    bool private = 14;
    int64 add_index = 15;
    int64 settle_index = 16;
    int64 amt_paid = 17;
    bytes payment_addr = 18;
    map<uint64, Feature> features = 19;
    string state = 20;
    bool is_keysend = 21;
    bytes payment_request_hash = 22;
    bool is_amp = 23;
}

message InvoiceSubscription {
    uint64 add_index = 1;
    uint64 settle_index = 2;
}

message AddInvoiceResponse {
    bytes r_hash = 1;
    string payment_request = 2;
    uint64 add_index = 3;
    bytes payment_addr = 4;
}

message RouteHint {
    repeated HopHint hop_hints = 1;
}

message HopHint {
    string node_id = 1;
    uint32 chan_id = 2;
    int64 fee_base_msat = 3;
    int64 fee_proportional_millionths = 4;
    uint32 cltv_expiry_delta = 5;
}

message Feature {
    string name = 1;
    bool is_required = 2;
    bool is_known = 3;
}
